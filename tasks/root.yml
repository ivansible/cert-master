---
- name: install certbot
  import_role:
    name: ivansible.cert_base
    tasks_from: install.yml
  tags: cert_master_install

- name: install rsync package
  apt:
    name: rsync
    state: present
  tags: cert_master_install


- name: configure ssh keys and aliases for root user to access replicas
  import_tasks: ssh.yml
  tags: cert_master_ssh


- name: create replica pushing script
  template:
    src: certbot-push-replica.sh
    dest: "{{ certbot_push_script }}"
    mode: 0700
  register: replica_pushing_script
  notify: fire first certbot push
  tags: cert_master_service

- name: create replica pushing service
  template:
    src: certbot-push.service
    dest: "{{ certbot_push_systemd }}@.service"
    mode: 0644
  register: replica_pushing_service
  notify: fire first certbot push
  tags: cert_master_service


- name: create replica pushing timer
  template:
    src: certbot-push.timer
    dest: "{{ certbot_push_systemd }}@.timer"
    mode: 0644
  register: replica_pushing_timer
  notify: fire first certbot push
  tags: cert_master_service

- name: enable pushing timers for all replicas (yet inactive)
  systemd:
    name: "certbot-push@{{ item }}.timer"
    state: stopped
    enabled: true
    daemon_reload: "{{ reload_systemd }}"
  vars:
    script_changed: "{{ replica_pushing_script |d({}) is changed }}"
    service_changed: "{{ replica_pushing_service |d({}) is changed }}"
    timer_changed: "{{ replica_pushing_timer |d({}) is changed }}"
    reload_systemd: "{{ script_changed or service_changed or timer_changed }}"
  loop: "{{ certbot_master_replicas }}"
  notify: fire first certbot push
  tags: cert_master_service


- name: create global pushing script
  template:
    src: certbot-push-global.sh
    dest: "{{ certbot_post_dir }}/push"
    mode: 0750
  notify: fire first certbot push
  tags: cert_master_service


- name: list all present certbot-push units
  script: list-certbot-push-units.sh
  register: all_push_replicas
  changed_when: false
  ignore_errors: true
  tags: cert_master_cleanup

- name: warn user if push units not found
  debug:
    msg:
      - "WARNING!"
      - "Please add more replicas to the play"
      - "or override with `certbot_master_replicas_arg`"
  when: not all_push_replicas.stdout_lines |d([],true)
  tags: cert_master_cleanup

- name: remove extra certbot-push timers and services (ok to fail)
  systemd:
    name: "certbot-push@{{ unit_name }}"
    state: stopped
    enabled: false
    daemon_reload: true
  failed_when: false
  loop: "{{ extra_units }}"
  loop_control:
    label: "{{ unit_name }}"
  vars:
    unit_name: "{{ item.0 }}.{{ item.1 }}"
    unit_types: [timer, service]

    push_replicas: "{{ all_push_replicas.stdout_lines |d([], true) |sort }}"
    extra_replicas: "{{ push_replicas |difference(certbot_master_replicas) }}"
    extra_units: "{{ extra_replicas |product(unit_types) |list }}"
  tags: cert_master_cleanup
...
